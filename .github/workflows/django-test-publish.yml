#
# Example GitHub Actions config for UW-IT AXD2 app testing and publishing to PyPi
#
# Preconditions:
#
#  1) Application contains a setup.py file
#
#  2) Application repo has access to the required secret
#     at https://github.com/organizations/uw-it-aca/settings/secrets:
#
#     PYPI_API_TOKEN
#
# To adapt this config to a specific Python app:
#
#  1) Set APP_NAME to the name of the package name/directory.
#
#  2) Set CONF_PATH to a path containing a urls.py and/or settings.py file
#     used by the test suite, if any
#
#  3) Verify that the lists of branches for push/pull_request is appropriate,
#     and add other branch names if needed.
#
#  4) Update the matrix of django versions to test, if necessary.
#
---
name: Test, Publish

env:
  APP_NAME: uw_saml
  CONF_PATH: conf

on:
  push:
    branches: [main, master, qa, develop]
  pull_request:
    branches: [main, master, qa, develop]
    types: [opened, reopened, synchronize]
  release:
    branches: [main, master]
    types: [published]

jobs:
  test:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        django-version:
          - '2.1'
          - '2.2'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Test App
        uses: uw-it-aca/actions/test-django-app@main
        with:
          app_name: ${APP_NAME}
          conf_path: ${CONF_PATH}
          django_version: ${{ matrix.django-version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    needs: test

    runs-on: ubuntu-18.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Publish to PyPi
        uses: uw-it-aca/actions/publish-pypi@main
        with:
          app_name: ${APP_NAME}
          tag_name: ${{ github.event.release.tag_name }}
          api_token: ${{ secrets.PYPI_API_TOKEN }}
